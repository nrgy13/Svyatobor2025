#!/usr/bin/env pwsh
<#
.SYNOPSIS
    –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–µ–ø–ª–æ—è –¥–ª—è Svyatobor Web –Ω–∞ Timeweb Cloud

.DESCRIPTION
    –ü–æ–ª–Ω–æ—Å—Ç—å—é –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ —Å–µ—Ä–≤–µ—Ä Timeweb Cloud.
    –í–∫–ª—é—á–∞–µ—Ç –≤–∞–ª–∏–¥–∞—Ü–∏—é, —Å–±–æ—Ä–∫—É, –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–æ–≤, —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –ø–æ—Å—Ç-–¥–µ–ø–ª–æ–π–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏.

.PARAMETER Environment
    –°—Ä–µ–¥–∞ –¥–µ–ø–ª–æ—è: staging –∏–ª–∏ production (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: production)

.PARAMETER SkipValidation
    –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–∞–ø –≤–∞–ª–∏–¥–∞—Ü–∏–∏

.PARAMETER SkipBuild
    –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–∞–ø —Å–±–æ—Ä–∫–∏ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–∞–ø–∫—É out)

.PARAMETER SkipBackup
    –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏

.PARAMETER DryRun
    –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è

.PARAMETER Rollback
    –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏

.PARAMETER Help
    –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø—Ä–∞–≤–∫—É

.EXAMPLE
    .\deploy-automated.ps1 -Environment production

.EXAMPLE
    .\deploy-automated.ps1 -Environment staging -SkipBuild

.EXAMPLE
    .\deploy-automated.ps1 -DryRun

.EXAMPLE
    .\deploy-automated.ps1 -Rollback
#>

[CmdletBinding()]
param(
    [Parameter(Mandatory = $false)]
    [ValidateSet("staging", "production")]
    [string]$Environment = "production",

    [switch]$SkipValidation,
    [switch]$SkipBuild,
    [switch]$SkipBackup,
    [switch]$DryRun,
    [switch]$Rollback,
    [switch]$Help
)

# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É UTF-8 –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤
[Console]::OutputEncoding = [System.Text.Encoding]::UTF8

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
$ScriptName = "Deploy-Automated"
$Version = "2.0.0"
$StartTime = Get-Date

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
$ColorScheme = @{
    Primary = "Cyan"
    Success = "Green"
    Warning = "Yellow"
    Error = "Red"
    Info = "White"
    Highlight = "Magenta"
}

function Show-Header {
    Clear-Host
    Write-Host "==================================================" -ForegroundColor $ColorScheme.Primary
    Write-Host "üöÄ $ScriptName v$Version" -ForegroundColor $ColorScheme.Highlight
    Write-Host "–ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ–ø–ª–æ–π Svyatobor Web" -ForegroundColor $ColorScheme.Primary
    Write-Host "==================================================" -ForegroundColor $ColorScheme.Primary
    Write-Host "–°—Ä–µ–¥–∞: $(Get-Culture).Name" -ForegroundColor $ColorScheme.Info
    Write-Host "–í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: $StartTime" -ForegroundColor $ColorScheme.Info
    Write-Host "==================================================" -ForegroundColor $ColorScheme.Primary
    Write-Host ""
}

function Show-Help {
    Write-Host "–ü–û–ú–û–©–¨: $ScriptName v$Version" -ForegroundColor $ColorScheme.Highlight
    Write-Host "==================================================" -ForegroundColor $ColorScheme.Primary
    Write-Host ""
    Write-Host "–û–ü–ò–°–ê–ù–ò–ï:" -ForegroundColor $ColorScheme.Success
    Write-Host "    –ê–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–µ–ø–ª–æ–π Next.js –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –Ω–∞ Timeweb Cloud"
    Write-Host ""
    Write-Host "–ü–ê–†–ê–ú–ï–¢–†–´:" -ForegroundColor $ColorScheme.Success
    Write-Host "    -Environment <string>" -ForegroundColor $ColorScheme.Warning
    Write-Host "        –°—Ä–µ–¥–∞ –¥–µ–ø–ª–æ—è: staging –∏–ª–∏ production (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: production)"
    Write-Host ""
    Write-Host "    -SkipValidation" -ForegroundColor $ColorScheme.Warning
    Write-Host "        –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–∞–ø –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã"
    Write-Host ""
    Write-Host "    -SkipBuild" -ForegroundColor $ColorScheme.Warning
    Write-Host "        –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —ç—Ç–∞–ø —Å–±–æ—Ä–∫–∏ (–∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â—É—é –ø–∞–ø–∫—É out)"
    Write-Host ""
    Write-Host "    -SkipBackup" -ForegroundColor $ColorScheme.Warning
    Write-Host "        –ü—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Å–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏"
    Write-Host ""
    Write-Host "    -DryRun" -ForegroundColor $ColorScheme.Warning
    Write-Host "        –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º –±–µ–∑ —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–æ–≥–æ –¥–µ–ø–ª–æ—è"
    Write-Host ""
    Write-Host "    -Rollback" -ForegroundColor $ColorScheme.Warning
    Write-Host "        –í—ã–ø–æ–ª–Ω–∏—Ç—å –æ—Ç–∫–∞—Ç –∫ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏"
    Write-Host ""
    Write-Host "    -Help" -ForegroundColor $ColorScheme.Warning
    Write-Host "        –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    Write-Host ""
    Write-Host "–ü–†–ò–ú–ï–†–´ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø:" -ForegroundColor $ColorScheme.Success
    Write-Host "    .\deploy-automated.ps1 -Environment production"
    Write-Host "    .\deploy-automated.ps1 -Environment staging -SkipBuild"
    Write-Host "    .\deploy-automated.ps1 -DryRun"
    Write-Host "    .\deploy-automated.ps1 -Rollback"
    Write-Host ""
    Write-Host "–ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø:" -ForegroundColor $ColorScheme.Success
    Write-Host "    –ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —Ñ–∞–π–ª–µ .env.deploy:"
    Write-Host "    - SSH_HOST: –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞ Timeweb"
    Write-Host "    - SSH_USER: –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
    Write-Host "    - SSH_KEY_PATH: –ø—É—Ç—å –∫ SSH –∫–ª—é—á—É"
    Write-Host "    - REMOTE_PATH: –ø—É—Ç—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ"
    Write-Host "    - PRODUCTION_DOMAIN: –¥–æ–º–µ–Ω –ø—Ä–æ–¥–∞–∫—à–µ–Ω–∞"
    Write-Host ""
}

function Test-Prerequisites {
    Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..." -ForegroundColor $ColorScheme.Info

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ PowerShell –≤–µ—Ä—Å–∏–∏
    $psVersion = $PSVersionTable.PSVersion
    if ($psVersion.Major -lt 5) {
        throw "–¢—Ä–µ–±—É–µ—Ç—Å—è PowerShell –≤–µ—Ä—Å–∏–∏ 5.0 –∏–ª–∏ –≤—ã—à–µ. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $($psVersion.Major).$($psVersion.Minor)"
    }

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è –º–æ–¥—É–ª–µ–π –¥–µ–ø–ª–æ—è
    $requiredModules = @("config.psm1", "logger.psm1", "validator.ps1", "deployer.psm1")
    foreach ($module in $requiredModules) {
        $modulePath = Join-Path "deploy-modules" $module
        if (!(Test-Path $modulePath)) {
            throw "–ù–µ –Ω–∞–π–¥–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –º–æ–¥—É–ª—å: $modulePath"
        }
    }

    Write-Host "‚úÖ –ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã" -ForegroundColor $ColorScheme.Success
}

function Initialize-Deployment {
    param([string]$Environment)

    Write-Host "üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–µ–ø–ª–æ—è..." -ForegroundColor $ColorScheme.Info

    try {
        # –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π –¥–µ–ø–ª–æ—è
        $modulesPath = Join-Path $PSScriptRoot "deploy-modules"
        Import-Module "$modulesPath\config.psm1" -Force
        Import-Module "$modulesPath\logger.psm1" -Force
        Import-Module "$modulesPath\validator.ps1" -Force
        Import-Module "$modulesPath\deployer.psm1" -Force

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
        Load-DeployConfig -Environment $Environment

        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ª–æ–≥–≥–µ—Ä–∞
        $logFile = Get-DeployConfig | ForEach-Object { $_.GetLogPath() }
        Initialize-DeployLogger -LogFile $logFile -LogLevel "INFO"

        Write-Host "‚úÖ –î–µ–ø–ª–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –¥–ª—è —Å—Ä–µ–¥—ã: $Environment" -ForegroundColor $ColorScheme.Success
    }
    catch {
        Write-Error "–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –¥–µ–ø–ª–æ—è: $($_.Exception.Message)"
        throw
    }
}

function Start-DeploymentProcess {
    param(
        [string]$Environment,
        [switch]$SkipValidation,
        [switch]$SkipBuild,
        [switch]$SkipBackup,
        [switch]$DryRun
    )

    Write-Host "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–µ–ø–ª–æ—è..." -ForegroundColor $ColorScheme.Highlight

    try {
        # –®–∞–≥ 1: –í–∞–ª–∏–¥–∞—Ü–∏—è
        if (!$SkipValidation) {
            Write-Host "üìã –®–∞–≥ 1: –í–∞–ª–∏–¥–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã..." -ForegroundColor $ColorScheme.Info
            $validationResult = Test-DeployReadiness

            if (!$validationResult.IsValid) {
                Write-Host "‚ùå –í–∞–ª–∏–¥–∞—Ü–∏—è –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞. –ò—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–ø—ã—Ç–∫—É." -ForegroundColor $ColorScheme.Error
                return $false
            }
            Write-Host "‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ" -ForegroundColor $ColorScheme.Success
        } else {
            Write-Host "‚è≠Ô∏è –®–∞–≥ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ –ø—Ä–æ–ø—É—â–µ–Ω" -ForegroundColor $ColorScheme.Warning
        }

        # –®–∞–≥ 2: –î–µ–ø–ª–æ–π
        if (!$DryRun) {
            Write-Host "üì¶ –®–∞–≥ 2: –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –¥–µ–ø–ª–æ—è..." -ForegroundColor $ColorScheme.Info
            $deployResult = Start-Deploy -Environment $Environment

            if ($deployResult.Success) {
                Write-Host "‚úÖ –î–µ–ø–ª–æ–π –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor $ColorScheme.Success
                Write-Host "üìä –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: $($deployResult.Duration)" -ForegroundColor $ColorScheme.Info
                Write-Host "üîó –î–µ–π—Å—Ç–≤–∏—è: $($deployResult.Actions.Count) –≤—ã–ø–æ–ª–Ω–µ–Ω–æ" -ForegroundColor $ColorScheme.Info
                return $true
            } else {
                Write-Host "‚ùå –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏!" -ForegroundColor $ColorScheme.Error
                Write-Host "üìã –û—à–∏–±–∫–∏:" -ForegroundColor $ColorScheme.Error
                foreach ($errorMsg in $deployResult.Errors) {
                    Write-Host "   ‚ùå $errorMsg" -ForegroundColor $ColorScheme.Error
                }
                return $false
            }
        } else {
            Write-Host "üé≠ –¢–µ—Å—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º: —Ñ–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –¥–µ–ø–ª–æ–π –ø—Ä–æ–ø—É—â–µ–Ω" -ForegroundColor $ColorScheme.Warning
            return $true
        }
    }
    catch {
        Write-Host "üí• –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –¥–µ–ø–ª–æ—è: $($_.Exception.Message)" -ForegroundColor $ColorScheme.Error
        Write-Host "üìû –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor $ColorScheme.Warning
        Write-Host "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env.deploy" -ForegroundColor $ColorScheme.Warning
        Write-Host "   2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞" -ForegroundColor $ColorScheme.Warning
        Write-Host "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SSH –∫–ª—é—á–∏" -ForegroundColor $ColorScheme.Warning
        Write-Host "   4. –°–º. –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" -ForegroundColor $ColorScheme.Warning
        return $false
    }
}

function Start-RollbackProcess {
    Write-Host "üîÑ –ó–∞–ø—É—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–∞ –æ—Ç–∫–∞—Ç–∞..." -ForegroundColor $ColorScheme.Warning

    try {
        Write-Host "üìã –ü–æ–∏—Å–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..." -ForegroundColor $ColorScheme.Info

        $backupDir = "backup"
        if (!(Test-Path $backupDir)) {
            Write-Host "‚ùå –ü–∞–ø–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $backupDir" -ForegroundColor $ColorScheme.Error
            return $false
        }

        $backups = Get-ChildItem $backupDir -Directory | Sort-Object CreationTime -Descending

        if ($backups.Count -eq 0) {
            Write-Host "‚ùå –†–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor $ColorScheme.Error
            return $false
        }

        Write-Host "üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏:" -ForegroundColor $ColorScheme.Info
        for ($i = 0; $i -lt [Math]::Min(5, $backups.Count); $i++) {
            $backup = $backups[$i]
            Write-Host "   $($i + 1). $($backup.Name) - $($backup.CreationTime)" -ForegroundColor $ColorScheme.Info
        }

        $latestBackup = $backups[0]
        Write-Host "üîÑ –í—ã–ø–æ–ª–Ω—è—é –æ—Ç–∫–∞—Ç –∫ –ø–æ—Å–ª–µ–¥–Ω–µ–π —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏: $($latestBackup.Name)" -ForegroundColor $ColorScheme.Warning

        # –ó–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –ª–æ–≥–∏–∫–∞ –æ—Ç–∫–∞—Ç–∞
        # –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç —á–µ—Ä–µ–∑ SSH

        Write-Host "‚ö†Ô∏è –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –æ—Ç–∫–∞—Ç —Ç—Ä–µ–±—É–µ—Ç –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ–π —Ä–µ–∞–ª–∏–∑–∞—Ü–∏–∏" -ForegroundColor $ColorScheme.Warning
        Write-Host "üí° –î–ª—è –æ—Ç–∫–∞—Ç–∞ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—ã:" -ForegroundColor $ColorScheme.Info
        Write-Host "   1. –ü–æ–¥–∫–ª—é—á–∏—Ç–µ—Å—å –∫ —Å–µ—Ä–≤–µ—Ä—É –ø–æ SSH" -ForegroundColor $ColorScheme.Info
        Write-Host "   2. –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ñ–∞–π–ª—ã –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏" -ForegroundColor $ColorScheme.Info
        Write-Host "   3. –ü–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –≤–µ–±-—Å–µ—Ä–≤–µ—Ä" -ForegroundColor $ColorScheme.Info

        return $true
    }
    catch {
        Write-Host "üí• –û—à–∏–±–∫–∞ –æ—Ç–∫–∞—Ç–∞: $($_.Exception.Message)" -ForegroundColor $ColorScheme.Error
        return $false
    }
}

function Show-Summary {
    param([bool]$Success, [string]$Environment)

    $endTime = Get-Date
    $duration = $endTime - $StartTime

    Write-Host ""
    Write-Host "==================================================" -ForegroundColor $ColorScheme.Primary
    Write-Host "üèÅ –ó–ê–í–ï–†–®–ï–ù–ò–ï –î–ï–ü–õ–û–Ø" -ForegroundColor $ColorScheme.Highlight
    Write-Host "==================================================" -ForegroundColor $ColorScheme.Primary

    if ($Success) {
        Write-Host "‚úÖ –°–¢–ê–¢–£–°: –£–°–ü–ï–•" -ForegroundColor $ColorScheme.Success
        Write-Host "üéØ –°—Ä–µ–¥–∞: $Environment" -ForegroundColor $ColorScheme.Success
        Write-Host "‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: $($duration.TotalMinutes.ToString("F1")) –º–∏–Ω—É—Ç" -ForegroundColor $ColorScheme.Info
        Write-Host "üìÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: $endTime" -ForegroundColor $ColorScheme.Info

        Write-Host ""
        Write-Host "üéâ –î–µ–ø–ª–æ–π –≤—ã–ø–æ–ª–Ω–µ–Ω —É—Å–ø–µ—à–Ω–æ!" -ForegroundColor $ColorScheme.Success
        Write-Host "üìä –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor $ColorScheme.Info
        Write-Host "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É —Å–∞–π—Ç–∞ –≤ –±—Ä–∞—É–∑–µ—Ä–µ" -ForegroundColor $ColorScheme.Info
        Write-Host "   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ" -ForegroundColor $ColorScheme.Info
        Write-Host "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ —Å–µ—Ä–≤–µ—Ä–∞ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏" -ForegroundColor $ColorScheme.Info
    } else {
        Write-Host "‚ùå –°–¢–ê–¢–£–°: –û–®–ò–ë–ö–ê" -ForegroundColor $ColorScheme.Error
        Write-Host "üéØ –°—Ä–µ–¥–∞: $Environment" -ForegroundColor $ColorScheme.Error
        Write-Host "‚è±Ô∏è –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: $($duration.TotalMinutes.ToString("F1")) –º–∏–Ω—É—Ç" -ForegroundColor $ColorScheme.Info
        Write-Host "üìÖ –ó–∞–≤–µ—Ä—à–µ–Ω–æ: $endTime" -ForegroundColor $ColorScheme.Info

        Write-Host ""
        Write-Host "üí• –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–∞–º–∏!" -ForegroundColor $ColorScheme.Error
        Write-Host "üîß –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor $ColorScheme.Warning
        Write-Host "   1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –≤ .env.deploy" -ForegroundColor $ColorScheme.Warning
        Write-Host "   2. –£–±–µ–¥–∏—Ç–µ—Å—å –≤ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–µ—Ä–∞" -ForegroundColor $ColorScheme.Warning
        Write-Host "   3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SSH –∫–ª—é—á–∏ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞" -ForegroundColor $ColorScheme.Warning
        Write-Host "   4. –°–º. –ª–æ–≥–∏ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏" -ForegroundColor $ColorScheme.Warning
        Write-Host "   5. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ -Rollback –¥–ª—è –æ—Ç–∫–∞—Ç–∞" -ForegroundColor $ColorScheme.Warning
    }

    Write-Host "==================================================" -ForegroundColor $ColorScheme.Primary
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ —Å–∫—Ä–∏–ø—Ç–∞
try {
    Show-Header

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–º–æ—â—å –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—à–µ–Ω–∞
    if ($Help) {
        Show-Help
        exit 0
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∂–∏–º –æ—Ç–∫–∞—Ç–∞
    if ($Rollback) {
        $success = Start-RollbackProcess
        Show-Summary -Success $success -Environment $Environment
        if ($success) { exit 0 } else { exit 1 }
    }

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è
    Test-Prerequisites

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–µ–ø–ª–æ–π
    Initialize-Deployment -Environment $Environment

    # –ó–∞–ø—É—Å–∫–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –¥–µ–ø–ª–æ—è
    $success = Start-DeploymentProcess -Environment $Environment -SkipValidation:$SkipValidation -SkipBuild:$SkipBuild -SkipBackup:$SkipBackup -DryRun:$DryRun

    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Ç–æ–≥–∏
    Show-Summary -Success $success -Environment $Environment

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –∫–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    if ($success) { exit 0 } else { exit 1 }

} catch {
    Write-Host ""
    Write-Host "üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: $($_.Exception.Message)" -ForegroundColor $ColorScheme.Error
    Write-Host "üìç –°—Ç—Ä–æ–∫–∞: $($_.InvocationInfo.ScriptLineNumber)" -ForegroundColor $ColorScheme.Error
    Write-Host "üìÑ –§–∞–π–ª: $($_.InvocationInfo.ScriptName)" -ForegroundColor $ColorScheme.Error

    Write-Host ""
    Write-Host "üîß –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–º–æ—â–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ:" -ForegroundColor $ColorScheme.Warning
    Write-Host "   .\deploy-automated.ps1 -Help" -ForegroundColor $ColorScheme.Info

    exit 1
}