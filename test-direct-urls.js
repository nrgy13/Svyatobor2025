#!/usr/bin/env node

/**
 * –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Supabase Storage
 */

import https from 'https';
import http from 'http';

const SUPABASE_URL = 'https://bvuagbjdedtfmvitrfpa.supabase.co';
const BUCKET_NAME = 'images';

// –ü—Ä—è–º—ã–µ URL –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
const testUrls = [
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/logos/logo.png`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/logos/logo-circle.png`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/backgrounds/hero-bg.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/backgrounds/result-bg.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/sections/advantages-image.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/sections/problem-image.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/services/service-trees.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/services/service-grass.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/services/service-spraying.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/services/service-removal.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/services/service-construction.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/clients/client-1.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/clients/client-2.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/clients/client-3.jpg`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/elements/element.png`,
  `${SUPABASE_URL}/storage/v1/object/public/${BUCKET_NAME}/elements/red-floral-ornament-white-background-embroidery.png`,
];

function testUrl(url) {
  return new Promise((resolve) => {
    const protocol = url.startsWith('https:') ? https : http;

    const req = protocol.request(url, {
      method: 'HEAD',
      timeout: 10000,
      headers: {
        'User-Agent': 'Mozilla/5.0 (compatible; ImageTest/1.0)'
      }
    }, (res) => {
      resolve({
        url,
        status: res.statusCode,
        contentType: res.headers['content-type'],
        contentLength: res.headers['content-length'],
        accessible: res.statusCode >= 200 && res.statusCode < 400
      });
    });

    req.on('error', (error) => {
      resolve({
        url,
        error: error.message,
        accessible: false
      });
    });

    req.on('timeout', () => {
      req.destroy();
      resolve({
        url,
        error: 'Timeout',
        accessible: false
      });
    });

    req.end();
  });
}

async function testAllUrls() {
  console.log('üöÄ –ü—Ä—è–º–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ URL –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ Supabase Storage\n');
  console.log(`üì¶ –ë–∞–∫–µ—Ç: ${BUCKET_NAME}`);
  console.log(`üåê –ë–∞–∑–æ–≤—ã–π URL: ${SUPABASE_URL}\n`);

  const results = [];

  for (let i = 0; i < testUrls.length; i++) {
    const url = testUrls[i];
    const shortName = url.split('/').pop();

    console.log(`üñºÔ∏è  –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: ${shortName}`);
    process.stdout.write(`   URL: ${url} ... `);

    try {
      const result = await testUrl(url);
      results.push(result);

      if (result.accessible) {
        console.log(`‚úÖ –î–æ—Å—Ç—É–ø–µ–Ω (${result.status})`);
        if (result.contentType) {
          console.log(`   üìã Content-Type: ${result.contentType}`);
        }
        if (result.contentLength) {
          console.log(`   üìè –†–∞–∑–º–µ—Ä: ${Math.round(result.contentLength / 1024)} KB`);
        }
      } else {
        console.log(`‚ùå –ù–µ –¥–æ—Å—Ç—É–ø–µ–Ω (${result.error || result.status})`);
      }
    } catch (error) {
      console.log(`‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
      results.push({
        url,
        error: error.message,
        accessible: false
      });
    }

    console.log('');
  }

  // –û—Ç—á–µ—Ç
  console.log('üìä –û—Ç—á–µ—Ç —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:');
  console.log('=' .repeat(50));

  const accessible = results.filter(r => r.accessible).length;
  const total = results.length;

  console.log(`‚úÖ –î–æ—Å—Ç—É–ø–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π: ${accessible}/${total}`);

  if (accessible > 0) {
    console.log('\nüéâ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
    results.filter(r => r.accessible).forEach(r => {
      const shortName = r.url.split('/').pop();
      console.log(`   ‚úÖ ${shortName}`);
    });
  }

  if (accessible < total) {
    console.log('\n‚ùå –ù–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:');
    results.filter(r => !r.accessible).forEach(r => {
      const shortName = r.url.split('/').pop();
      console.log(`   ‚ùå ${shortName}: ${r.error || `HTTP ${r.status}`}`);
    });

    console.log('\nüîß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
    console.log('   1. –ë–∞–∫–µ—Ç –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç');
    console.log('   2. –§–∞–π–ª—ã –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω—ã');
    console.log('   3. –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞ –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    console.log('   4. –ë–∞–∫–µ—Ç –ø—Ä–∏–≤–∞—Ç–Ω—ã–π');
  }

  if (accessible === total) {
    console.log('\nüéØ –í—Å–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–æ—Å—Ç—É–ø–Ω—ã!');
    console.log('\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:');
    console.log('   1. –û–±–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã –≤ lib/constants.ts —Å —ç—Ç–∏–º–∏ URL');
    console.log('   2. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Next.js –Ω–∞—Å—Ç—Ä–æ–µ–Ω –¥–ª—è –≤–Ω–µ—à–Ω–∏—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π');
    console.log('   3. –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ');
  }

  return results;
}

// –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
testAllUrls().catch(console.error);