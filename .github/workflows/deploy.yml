name: üöÄ –î–µ–ø–ª–æ–π –Ω–∞ Timeweb Apps

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      SSH_HOST: ${{ secrets.SSH_HOST }}
      SSH_USER: ${{ secrets.SSH_USER }}
      SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      PRODUCTION_DOMAIN: ${{ secrets.PRODUCTION_DOMAIN }}
      TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}

    steps:
    - name: üì• Checkout –∫–æ–¥
      uses: actions/checkout@v4

    - name: üõÇ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ IAM (–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω–æ)
      if: github.event_name == 'workflow_dispatch' || github.event_name == 'workflow_run' || github.event_name == 'push'
      shell: bash
      run: |
        cat <<'MSG'
        –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ IAM –¥–ª—è Gemini:

        1) –í–∫–ª—é—á–∏—Ç–µ API:
           gcloud services enable cloudaicompanion.googleapis.com --project=PROJECT_ID

        2) –î–æ–±–∞–≤—å—Ç–µ —Ä–æ–ª–∏ (–∑–∞–º–µ–Ω–∏—Ç–µ PROJECT_ID –∏ PRINCIPAL):
           gcloud projects add-iam-policy-binding PROJECT_ID \
             --member="user:email@example.com" \
             --role="roles/aiplatform.user"

           gcloud projects add-iam-policy-binding PROJECT_ID \
             --member="user:email@example.com" \
             --role="roles/serviceusage.serviceUsageConsumer"

        3) –î–ª—è —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∞–∫–∫–∞—É–Ω—Ç–∞ –∑–∞–º–µ–Ω–∏—Ç–µ --member –Ω–∞:
           --member="serviceAccount:sa-name@PROJECT_ID.iam.gserviceaccount.com"

        4) –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–æ–ª–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏: Console ‚Üí IAM & Admin ‚Üí IAM

        –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: —Ä–æ–ª—å "Gemini for Google Cloud User" –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∫ —á–∞—Å—Ç—å —Ä–æ–ª–µ–π AI Platform / Vertex AI (roles/aiplatform.user) –≤ gcloud.
        MSG

    - name: üîß –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'

    - name: üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
      run: npm ci

    - name: üèóÔ∏è –°–±–æ—Ä–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
      run: npm run build

    - name: üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–±–æ—Ä–∫–∏
      run: |
        ls -la out/
        test -f "out/index.html" && echo "‚úÖ index.html –Ω–∞–π–¥–µ–Ω" || echo "‚ùå index.html –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"
        test -f "out/404.html" && echo "‚úÖ 404.html –Ω–∞–π–¥–µ–Ω" || echo "‚ùå 404.html –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç"

    - name: üîé –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è (–º–∞—Å–∫–∏—Ä–æ–≤–∞–Ω–æ)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      shell: bash
      run: |
        set -eu
        show_presence() { [ -n "$1" ] && echo "set" || echo "missing"; }
        show_len() { [ -n "$1" ] && echo "${#1}" || echo "0"; }
        echo "SSH_HOST: $(show_presence "$SSH_HOST")"
        echo "SSH_USER: $(show_presence "$SSH_USER")"
        echo "SSH_PRIVATE_KEY length: $(show_len "$SSH_PRIVATE_KEY")"
        echo "PRODUCTION_DOMAIN: $(show_presence "$PRODUCTION_DOMAIN")"
        echo "TELEGRAM_BOT_TOKEN: $(show_presence "$TELEGRAM_BOT_TOKEN")"
        echo "TELEGRAM_CHAT_ID: $(show_presence "$TELEGRAM_CHAT_ID")"

    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ zsh –∏ Oh My Zsh –±—ã–ª–∞ —É–¥–∞–ª–µ–Ω–∞ –∫–∞–∫ –∏–∑–±—ã—Ç–æ—á–Ω–∞—è

    - name: üîë –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSH –∫–ª—é—á–∞
      if: >
        github.ref == 'refs/heads/main' &&
        github.event_name == 'push' &&
        env.SSH_HOST != '' &&
        env.SSH_USER != '' &&
        env.SSH_PRIVATE_KEY != ''
      shell: bash
      run: |
        set -eu
        mkdir -p ~/.ssh
        printf '%s' "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -H "$SSH_HOST" >> ~/.ssh/known_hosts

    - name: üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
      if: >
        github.ref == 'refs/heads/main' &&
        github.event_name == 'push' &&
        env.SSH_HOST != '' &&
        env.SSH_USER != '' &&
        env.SSH_PRIVATE_KEY != ''
      shell: bash
      run: |
        set -e
        echo "üîé –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ SSH –∫–ª—é—á–∞ (–ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏):"
        head -n 2 ~/.ssh/deploy_key || true
        echo "üìã –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –∏ –≤–ª–∞–¥–µ–ª–µ—Ü:"
        stat ~/.ssh/deploy_key || true
        echo "üîå –ü–æ–¥—Ä–æ–±–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ SSH:"
        ssh -vvv -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" << 'EOF'
          set -e
          echo "1. –¢–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: $(whoami)"
          echo "2. –¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $(pwd)"
          echo "3. –ü—Ä–∞–≤–∞ –Ω–∞ /var/www/html:"
          ls -la /var/www/html/
          echo "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å:"
          touch /var/www/html/test_write && echo "‚úÖ –ó–∞–ø–∏—Å—å —Ä–∞–∑—Ä–µ—à–µ–Ω–∞" || echo "‚ùå –ó–∞–ø–∏—Å—å –∑–∞–ø—Ä–µ—â–µ–Ω–∞"
          rm -f /var/www/html/test_write
          echo "5. –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω"
        EOF

    - name: üì§ –î–µ–ø–ª–æ–π —Ñ–∞–π–ª–æ–≤ —á–µ—Ä–µ–∑ SSH
      if: >
        github.ref == 'refs/heads/main' &&
        github.event_name == 'push' &&
        env.SSH_HOST != '' &&
        env.SSH_USER != '' &&
        env.SSH_PRIVATE_KEY != ''
      shell: bash
      run: |
        rsync -avz --delete \
          -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
          ./out/ "$SSH_USER@$SSH_HOST:/var/www/html/"

    - name: üì§ –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
      if: >
        github.ref == 'refs/heads/main' &&
        github.event_name == 'push' &&
        env.SSH_HOST != '' &&
        env.SSH_USER != '' &&
        env.SSH_PRIVATE_KEY != ''
      shell: bash
      run: |
        rsync -avz \
          -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
          ./images/ "$SSH_USER@$SSH_HOST:/var/www/html/images/" || true
        rsync -avz \
          -e "ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no" \
          ./public/images/ "$SSH_USER@$SSH_HOST:/var/www/html/public/images/" || true

    - name: ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–µ–ø–ª–æ—è
      if: >
        github.ref == 'refs/heads/main' &&
        github.event_name == 'push' &&
        env.SSH_HOST != '' &&
        env.SSH_USER != '' &&
        env.SSH_PRIVATE_KEY != ''
      shell: bash
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–µ–ø–ª–æ—è:"
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no "$SSH_USER@$SSH_HOST" "ls -la /var/www/html/"
        echo "üéâ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"
        if [ -n "$PRODUCTION_DOMAIN" ]; then
          echo "üåê –°–∞–π—Ç –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: https://$PRODUCTION_DOMAIN"
        fi

    - name: üì¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–µ–ø–ª–æ–µ
      if: >
        github.ref == 'refs/heads/main' &&
        github.event_name == 'push' &&
        env.TELEGRAM_BOT_TOKEN != '' &&
        env.TELEGRAM_CHAT_ID != ''
      uses: appleboy/telegram-action@v1.0.1
      with:
        to: ${{ env.TELEGRAM_CHAT_ID }}
        token: ${{ env.TELEGRAM_BOT_TOKEN }}
        format: markdown
        message: |
          üöÄ **–î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!**

          **–ü—Ä–æ–µ–∫—Ç:** Svyatobor Web
          **–í–µ—Ç–∫–∞:** ${{ github.ref_name }}
          **–ö–æ–º–º–∏—Ç:** ${{ github.sha }}

          üåê **–°–∞–π—Ç:** https://${{ env.PRODUCTION_DOMAIN }}

          üìä **–°—Ç–∞—Ç—É—Å:** ‚úÖ –ì–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ
