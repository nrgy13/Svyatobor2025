#!/usr/bin/env pwsh

# –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∏–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –¥–µ–ø–ª–æ—é
# –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω –¥–ª—è Windows PowerShell

Write-Host "=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –¥–µ–ø–ª–æ—è ===" -ForegroundColor Magenta
Write-Host ""

# 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
Write-Host "1. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:" -ForegroundColor Blue

# Node.js
try {
    $nodeVersion = node --version
    Write-Host "‚úÖ Node.js: $nodeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Node.js –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
}

# Git
try {
    $gitVersion = git --version
    Write-Host "‚úÖ Git: $gitVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Git –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
}

# 2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞
Write-Host ""
Write-Host "2. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–µ–∫—Ç–∞:" -ForegroundColor Blue

# –ü—Ä–æ–≤–µ—Ä–∫–∞ package.json
if (Test-Path "package.json") {
    Write-Host "‚úÖ package.json –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
} else {
    Write-Host "‚ùå package.json –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–±–æ—Ä–∫–∏
if (Test-Path "out") {
    $buildSize = (Get-ChildItem "out" -Recurse | Measure-Object -Property Length -Sum).Sum
    $buildSizeMB = [math]::Round($buildSize / 1MB, 2)
    Write-Host "‚úÖ –°–±–æ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—Ä–∞–∑–º–µ—Ä: $($buildSizeMB) –ú–ë)" -ForegroundColor Green
} else {
    Write-Host "‚ùå –°–±–æ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" -ForegroundColor Red
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ–∞–π–ª–æ–≤
$criticalFiles = @("out/index.html", "out/404.html")
foreach ($file in $criticalFiles) {
    if (Test-Path $file) {
        $fileSize = (Get-Item $file).Length
        Write-Host "‚úÖ $($file): $([math]::Round($fileSize / 1KB, 2)) –ö–ë" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $($file) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" -ForegroundColor Red
    }
}

# 3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
Write-Host ""
Write-Host "3. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π:" -ForegroundColor Blue

$imagesPath = "out/images"
if (Test-Path $imagesPath) {
    $images = Get-ChildItem $imagesPath -File
    $imagesCount = $images.Count
    $imagesSize = ($images | Measure-Object -Property Length -Sum).Sum
    $imagesSizeMB = [math]::Round($imagesSize / 1MB, 2)

    Write-Host "‚úÖ –ù–∞–π–¥–µ–Ω–æ $($imagesCount) –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π ($($imagesSizeMB) –ú–ë)" -ForegroundColor Green

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤ —Ñ–∞–π–ª–æ–≤
    $imageTypes = $images | Group-Object Extension | Select-Object Name, Count
    foreach ($type in $imageTypes) {
        Write-Host "   $($type.Name): $($type.Count) —Ñ–∞–π–ª–æ–≤" -ForegroundColor Gray
    }
} else {
    Write-Host "‚ùå –ü–∞–ø–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–∞" -ForegroundColor Red
}

# 4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
Write-Host ""
Write-Host "4. –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:" -ForegroundColor Blue

$envFiles = @(".env.deploy", ".env")
foreach ($file in $envFiles) {
    if (Test-Path $file) {
        Write-Host "‚úÖ $($file) –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
        $envContent = Get-Content $file -Raw
        if ($envContent -match "SSH_HOST=–í–ê–®_–°–ï–†–í–ï–†\.timeweb\.ru") {
            Write-Host "‚ö†Ô∏è  –í $($file) –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è —à–∞–±–ª–æ–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è" -ForegroundColor Yellow
        }
    } else {
        Write-Host "‚ùå $($file) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" -ForegroundColor Red
    }
}

# 5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–µ–ø–ª–æ—è
Write-Host ""
Write-Host "5. –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∫—Ä–∏–ø—Ç–æ–≤ –¥–µ–ø–ª–æ—è:" -ForegroundColor Blue

$deployScripts = @("deploy.sh", "init-deploy.sh")
foreach ($script in $deployScripts) {
    if (Test-Path $script) {
        Write-Host "‚úÖ $($script) –Ω–∞–π–¥–µ–Ω" -ForegroundColor Green
    } else {
        Write-Host "‚ùå $($script) –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç" -ForegroundColor Red
    }
}

# 6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
Write-Host ""
Write-Host "6. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:" -ForegroundColor Blue

Write-Host "üìã –î–ª—è –¥–µ–ø–ª–æ—è –Ω–∞ Timeweb Cloud –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:" -ForegroundColor Yellow
Write-Host "   1. –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–µ–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ .env.deploy" -ForegroundColor White
Write-Host "   2. –°–æ–∑–¥–∞—Ç—å SSH –∫–ª—é—á –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É" -ForegroundColor White
Write-Host "   3. –£–±–µ–¥–∏—Ç—å—Å—è –≤ –Ω–∞–ª–∏—á–∏–∏ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–µ—Ä–≤–µ—Ä—É" -ForegroundColor White
Write-Host "   4. –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –∫–≤–æ—Ç—ã –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞" -ForegroundColor White

Write-Host ""
Write-Host "üìä –°–≤–æ–¥–∫–∞ —Å–±–æ—Ä–∫–∏:" -ForegroundColor Cyan
Write-Host "   - –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã: ~113 –ö–ë" -ForegroundColor White
Write-Host "   - –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: ~12.5 –ú–ë" -ForegroundColor White
Write-Host "   - –û–±—â–∏–π —Ä–∞–∑–º–µ—Ä: ~12.6 –ú–ë" -ForegroundColor White

Write-Host ""
Write-Host "=== –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===" -ForegroundColor Magenta