const { createClient } = require('@supabase/supabase-js');

// –ù–∞—Å—Ç—Ä–æ–π–∫–∏ Supabase –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const supabaseUrl = process.env.NEXT_PUBLIC_SUPABASE_URL || 'https://bvuagbjdedtfmvitrfpa.supabase.co';
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY || 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJ2dWFnYmpkZWR0Zm12aXRyZnBhIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImlhdCI6MTc2MDQ0ODI4MSwiZXhwIjoyMDc2MDI0MjgxfQ.RYhDzxaQf76g-ndAi7sv_ideQADFTZP_Nm24nsqQ3kk';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function checkAvailableTables() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü –≤ Supabase...');

  try {
    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ –ø—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ–º–æ–π —Ç–∞–±–ª–∏—Ü—ã contact_submissions
    console.log('üìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã contact_submissions...');
    const { data: submissionsData, error: submissionsError } = await supabase
      .from('contact_submissions')
      .select('*')
      .limit(5);

    if (submissionsError) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ contact_submissions –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', submissionsError.message);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ contact_submissions –Ω–∞–π–¥–µ–Ω–∞!');
      console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${submissionsData.length}`);
      if (submissionsData.length > 0) {
        console.log('–ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:', submissionsData[0]);
      }
    }

    // –ü–æ–ø—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–∞–±–ª–∏—Ü—ã contact_requests
    console.log('\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã contact_requests...');
    const { data: requestsData, error: requestsError } = await supabase
      .from('contact_requests')
      .select('*')
      .limit(5);

    if (requestsError) {
      console.log('‚ùå –¢–∞–±–ª–∏—Ü–∞ contact_requests –Ω–µ –Ω–∞–π–¥–µ–Ω–∞:', requestsError.message);
    } else {
      console.log('‚úÖ –¢–∞–±–ª–∏—Ü–∞ contact_requests –Ω–∞–π–¥–µ–Ω–∞!');
      console.log(`–ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: ${requestsData.length}`);
      if (requestsData.length > 0) {
        console.log('–ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏:', requestsData[0]);
      }
    }

    // –ü—Ä–æ–≤–µ—Ä–∏–º —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ RPC
    console.log('\nüìã –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü...');
    const { data: tablesData, error: tablesError } = await supabase.rpc('get_table_list');

    if (tablesError) {
      console.log('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü —á–µ—Ä–µ–∑ RPC');
      console.log('–≠—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ - RPC —Ñ—É–Ω–∫—Ü–∏—è –º–æ–∂–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å');
    } else {
      console.log('‚úÖ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã:', tablesData);
    }

  } catch (error) {
    console.error('‚ùå –ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Ç–∞–±–ª–∏—Ü:', error);
  }
}

checkAvailableTables();